// Generated by Flexc++ V2.14.00 on Tue, 07 Nov 2023 22:42:56 +0100

#ifndef header_scanner_H_INCLUDED_
#define header_scanner_H_INCLUDED_

// $insert baseclass_h
#include "header_scanner_base.h"


// $insert classHead
class header_scanner: public header_scannerBase
{
    public:
        explicit header_scanner(std::string const& infile);
        
        // $insert lexFunctionDecl
        int lex();

    private:
        int lex_();
        int executeAction_(size_t ruleNr);

        void print();
        void preCode();     // re-implement this function for code that must 
                            // be exec'ed before the patternmatching starts

        void postCode(PostEnum_ type);    
                            // re-implement this function for code that must 
                            // be exec'ed after the rules's actions.
};

// $insert scannerConstructors
inline header_scanner::header_scanner(std::string const& infile)
:
    header_scannerBase(infile, "-")
{}

// $insert inlineLexFunction
inline int header_scanner::lex()
{
    return lex_();
}

inline void header_scanner::preCode() 
{
    // optionally replace by your own code
}

inline void header_scanner::postCode([[maybe_unused]] PostEnum_ type) 
{
    // optionally replace by your own code
}

inline void header_scanner::print() 
{
    print_();
}


#endif // header_scanner_H_INCLUDED_

