//          Copyright (C) 2022 PsiMasTho (1cbb875@gmail.com)
// Distributed under the Boost Software License, Version 1.0.
//    (See accompanying file LICENSE.txt or copy at
//          https://www.boost.org/LICENSE_1_0.txt)

%scanner ../lexer/lexed_file.h
%scanner-class-name lexed_file_walker
%scanner-token-function m_walker.advance()
%scanner-matched-text-function m_walker.get_cur_match()
%parsefun-source header_parser_base.cc
%token-class header_tokens
%token-path ../lexer/tokens.h

%baseclass-preinclude header_parser_base_preinclude.h

%token  DECL_VAR
        DECL_ATTR
        IDENT
        NEWLINE
        REGEX

%stype std::string

%%

input:
    // empty
|
    input line
;

line:
    declare_attribute NEWLINE
|
    declare_attribute EOF
|
    declare_variable NEWLINE
|
    declare_variable EOF
|
    NEWLINE
;

declare_attribute:
    DECL_ATTR identifier ';'
    {
        m_ctx.add_attr($2);
    }
|
    declare_attribute regex ';'
    {
        m_ctx.add_regex_to_last_attr($2);
    }
;

declare_variable:
    DECL_VAR identifier ';'
    {
        m_ctx.add_var($2);
    }
|
    declare_variable identifier ';'
    {
        m_ctx.add_attr_to_last_var($2);
    }
;

identifier:
    IDENT
    {
        std::string val{m_walker.get_cur_match().data(), m_walker.get_cur_match().size()};
        $$ = std::move(val);
    }
;

regex:
    REGEX
    {
        std::string val{m_walker.get_cur_match().data(), m_walker.get_cur_match().size()};
        $$ = std::move(val);
    }
;